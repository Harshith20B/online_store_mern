# Starter pipeline
trigger:
- main

variables:
  DOCKER_REGISTRY: 'docker'
  BACKEND_IMAGE: 'harshithb20/online_store_mern-backend'
  FRONTEND_IMAGE: 'harshithb20/online_store_mern-frontend'

pool:
  name: Harshith
  demands:
  - Agent.Name -equals Harshithb

stages:
- stage: BuildAndTest
  displayName: 'Build and Test'
  jobs:
  - job: BuildTest
    displayName: 'Backend Build and Test'
    steps:
    - checkout: self

    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js 20'

    - script: |
        cd backend
        npm install
      displayName: 'Install Backend Dependencies'

    - script: |
        cd backend
        npm run test
      displayName: 'Run Backend Tests'
      continueOnError: true

- stage: SonarQubeAnalysis
  displayName: 'SonarQube Analysis'
  dependsOn: BuildAndTest
  jobs:
  - job: SonarQube
    displayName: 'Run SonarQube'
    steps:
    - checkout: self

    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'SonarQube1'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'online_store_mern'
        cliProjectName: 'online_store_mern'
        cliSources: 'backend'
        extraProperties: |
          sonar.branch.name=
          sonar.javascript.node.version=20.x
      displayName: 'Prepare SonarQube Analysis'

    - task: SonarQubeAnalyze@5
      displayName: 'Run SonarQube Analysis'

    - task: SonarQubePublish@5
      inputs:
        pollingTimeoutSec: '300'
      displayName: 'Publish SonarQube Results'

- stage: BuildAndPush
  displayName: 'Build and Push Docker Images'
  dependsOn: SonarQubeAnalysis
  jobs:
  - job: DockerBuild
    displayName: 'Docker Build and Push'
    steps:
    - checkout: self

    - task: Docker@2
      inputs:
        containerRegistry: $(DOCKER_REGISTRY)
        repository: $(BACKEND_IMAGE)
        command: 'buildAndPush'
        Dockerfile: 'backend/Dockerfile'
        buildContext: 'backend'
        tags: |
          latest
          $(Build.BuildId)
      displayName: 'Build and Push Backend Docker Image'

    - task: Docker@2
      inputs:
        containerRegistry: $(DOCKER_REGISTRY)
        repository: $(FRONTEND_IMAGE)
        command: 'buildAndPush'
        Dockerfile: 'frontend/Dockerfile'
        buildContext: 'frontend'
        tags: |
          latest
          $(Build.BuildId)
      displayName: 'Build and Push Frontend Docker Image'

- stage: GrypeScan
  displayName: 'Grype Vulnerability Scan'
  dependsOn: BuildAndPush
  variables:
    GRYPE_VERSION: 'v0.94.0'
  jobs:
  - job: Scan
    displayName: 'Scan Backend Image'
    steps:
    - checkout: self

    - powershell: |
        $version = "$(GRYPE_VERSION)"
        $url = "https://github.com/anchore/grype/releases/download/$version/grype_${version}_windows_amd64.zip"
        Write-Host "Downloading Grype from $url"
        curl.exe -L -o grype.zip $url
        Expand-Archive grype.zip -DestinationPath grype
      displayName: 'Download and Extract Grype'

    - powershell: |
        .\grype\grype.exe $(BACKEND_IMAGE):latest
      displayName: 'Scan Backend Image with Grype'
